https://www.facebook.com/tebelorg/
// automation flow files start with an URL to tell TA.Gui where to go

// this flow goes through examples of using conditions in natural language
// for issues or questions, kindly feedback on GitHub or support@tebel.org
// see cheatsheet for steps, conditions, finding element identifiers, etc
// https://github.com/tebelorg/TA.Gui#cheat-sheet

// conditions involve comparing of variables and values to determine what to do next
// variables can be from read / fetch step, or self-declared / from files using JavaScript
// write text in quotation marks (either " or ' works) to differentiate from variable names

// declare some variables for use in this sample flow
var menu = "salads fruits sandwiches"; cupcakes = 12; // text in quotation marks 

// conditions can be expressed in natural language (optional brackets) or JavaScript
// for conditions such as contain / equal, you can use with or without s behind

if menu contains "fruits"
echo "Menu contains fruits. (condition and action in natural language)"

if (menu.indexOf("fruits")>-1)
echo "Menu contains fruits. (condition in JavaScript, action in natural language)"

if (menu.indexOf("fruits")>-1)
this.echo("Menu contains fruits. (condition and action in JavaScript)");

if menu equals to "salads fruits sandwiches"
echo "This is perfect."

if menu not equals to "salads fruits sandwiches" and menu contains "salads"
echo "This is not too bad."

// combination of different conditions in 1 line as a condition to check
if menu contains "fruits" and menu not contains "meat"
echo "Menu contains fruits and no meat."

if menu contains "cheese" or menu contains "fish" or menu contains "meat"
echo "Menu is not vegan-friendly."

// some examples of working with numbers in conditions, see cheatsheet for more details  
// TA.Gui supports a fairly rich way to express numeric conditions in natural language

if cupcakes lesser than 6
echo "Time to restock cupcakes."

if cupcakes greater than or equals to 12
echo "That is a lot of cupcakes on the table."

if cupcakes higher than or equal to 24
echo "That is really a lot of cupcakes on the table."

if cupcakes equals to 12
echo "Just nice to fit a box."

if cupcakes more than 1 and cupcakes lesser than 3
echo "Just nice for you and me."

// conditions if / for / while apply to the next step and async wait auto-disables in loops
// this is a little tricky and will just try explaining in simple language (CasperJS / JavaScript users may know)
// basically you can use a step right after if / for / while and the condition will be applied to that one step 

// steps involving interacting on webpage elements are intentionally designed to auto-interact with the element
// as soon as it is available on the webpage. this allows execution to be as fast as the webapp/network allows.
// the price to pay for that is cannot put multiple steps to be part of a if / for / while condition
// there is an alternative for now, that involves using CasperJS JavaScript code directly in the flow 

// natural language version
for n from 1 to 3
click fb_logo

// CasperJS JavaScript version
for (n=1; n<=3; n++)
this.echo("click fb_logo"); this.click(tx("fb_logo"));

// CasperJS JavaScript version with multiple actions
for (n=1; n<=3; n++)
{
this.echo("click fb_logo"); this.click(tx("fb_logo"));
this.echo("click fb_logo"); this.click(tx("fb_logo"));
}

// above has total of 12 clicks to Facebook logo

// another example of using for to repeat an action many times
for ID from 2 to 5
echo "Current ID is - " ID

// while condition is tricky and do not encourage using it
// unless you are sure the condition will break at some point
// this will not run even once as cupcakes is set to 12 earlier
while cupcakes lesser than 12
echo "Cupcakes lesser than 12..."
